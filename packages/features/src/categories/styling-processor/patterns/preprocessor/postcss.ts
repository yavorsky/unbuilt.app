import { Page } from 'playwright';

export const postCSS = [
  {
    name: 'coreMarkers' as const,
    score: 0.3,
    stylesheets: [
      // PostCSS source identifiers
      /\/\*!postcss:[\w-]+?\*\//,
      /\/*\s*@generated\s+by\s+postcss\s*\*\//,

      // PostCSS source map format
      /\/\*# sourceMappingURL=data:application\/json;base64,[A-Za-z0-9+/=]+\*\/[\s\n]*\/\*\s*generated by postcss/,

      // PostCSS plugin headers
      /\/\*!\s*postcss-[\w-]+?\s+v[\d.]+\s*\*\//,
    ],
  },
  {
    name: 'customSyntax' as const,
    score: 0.3,
    stylesheets: [
      // PostCSS Custom Media
      /@custom-media\s+--[\w-]+?\s*\([^)]+?\)\s*;/,
      /@media\s+\(--[\w-]+?\)/,

      // PostCSS Custom Selectors
      /@custom-selector\s+:--[\w-]+?\s+\./,
      /:--[\w-]+?\s*\{/,

      // PostCSS Custom Properties Sets
      /@property\s+--[\w-]+?\s*\{[\s\S]*?syntax:\s*['"][^'"]+?['"][\s\S]*?\}/,
    ],
  },
  {
    name: 'tailwindMarkers' as const,
    score: 0.3,
    stylesheets: [
      // Tailwind-specific custom properties
      /--tw-(?:ring|shadow|space|divide|gradient|text|bg)-[\w-]+:/,
      /--tw-(?:pan|pinch|touch)-[\w-]+:/,

      // Tailwind-specific function usage
      /theme\(['"]([\w.-]+)['"]\)/,

      // Tailwind-specific at-rules
      /@tailwind\s+(?:base|components|utilities|screens)\b/,
      /@apply\s+[\w-:\/\[\]]+(?:\s+[\w-:\/\[\]]+)*\s*;/,
    ],
  },
  {
    name: 'tailwindSpecific' as const,
    score: 0.3,
    stylesheets: [
      // Tailwind JIT unique class patterns
      /\.(?:before|after)\\:(?!\\)[^{]+{\s*content:\s*(?:var|["'])\s*}/,
      /\.group\\:[\w-]+\\:[\w-]+\[/,
      /\.peer\\:[\w-]+\\:[\w-]+\[/,

      // Tailwind-specific arbitrary values
      /\[\s*--tw-[\w-]+:\s*[\d.]+\s*\]/,
    ],
  },
  {
    name: 'postcssUnique' as const,
    score: 0.3,
    stylesheets: [
      // PostCSS-specific plugin markers
      /\/\*!postcss:[\w-]+\*\//,
      /\/\*!autoprefixer(?::\s*[\w\s.]+)?\*\//,

      // PostCSS custom selectors (unique syntax)
      /@custom-selector\s+:--[\w-]+\s+\./,

      // PostCSS-specific nesting plugin syntax
      /\@nest\s+&:[^\s{]+\s*{/,
    ],
  },
  {
    name: 'tailwindConfig' as const,
    score: 0.2,
    stylesheets: [
      // Tailwind configuration markers
      /\/\*!\s*tailwindcss\s+v[\d.]+\s*\*\//,

      // Tailwind-specific layer comments
      /\/\*\s*@layer\s+(?:base|components|utilities)\s*{[^}]*}\s*\*\//,

      // Tailwind purge markers
      /\/\*\s*!layer\s+tailwind-[\w-]+\s*\*\//,
    ],
  },
  {
    name: 'nestingSyntax' as const,
    score: 0.3,
    stylesheets: [
      // PostCSS nesting specific patterns
      /@nest\s+&:[^\s{]+\s*\{/,
      /@nest\s+&\s*>\s*\.[^\s{]+\s*\{/,
      /@nest\s+&\s*\[[^\]]+\]\s*\{/,

      // PostCSS nested ancestors
      /^(?:\/\*[\s\S]*?\*\/\s*)*@nest\s+(?:[^{]+&[^{]*)+\{/m,

      // PostCSS parent selector with pseudos
      /@nest\s+:--[\w-]+\s*&\s*\{/,
    ],
  },
];
